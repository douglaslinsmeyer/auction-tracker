# Log rotation configuration for Nellis Auction Helper
# Place this file at /etc/logrotate.d/nellis-auction or run manually with:
# logrotate -f /path/to/logrotate.conf

# Backend application logs
/app/logs/backend/*.log {
    # Rotate daily
    daily
    
    # Keep 7 days of logs
    rotate 7
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't rotate if empty
    notifempty
    
    # Create new log files with proper permissions
    create 0644 node node
    
    # Rotate when file size reaches 100MB
    maxsize 100M
    
    # Continue logging to new file after rotation
    copytruncate
    
    # Archive old logs
    olddir /app/logs/backend/archive
    createolddir 0755 node node
    
    # Run post-rotation script
    sharedscripts
    postrotate
        # Send SIGUSR1 to Node.js process to reopen log files (if supported)
        # pkill -USR1 -f "node.*index.js" || true
        
        # Optional: Send notification
        # echo "Logs rotated at $(date)" >> /app/logs/rotation.log
    endscript
}

# Dashboard logs (if any)
/app/logs/dashboard/*.log {
    daily
    rotate 7
    compress
    delaycompress
    notifempty
    create 0644 node node
    maxsize 50M
    copytruncate
    missingok
}

# Nginx access logs
/var/log/nginx/access.log {
    daily
    rotate 14
    compress
    delaycompress
    notifempty
    create 0640 nginx nginx
    maxsize 200M
    sharedscripts
    postrotate
        # Reload nginx to reopen log files
        nginx -s reopen || true
    endscript
}

# Nginx error logs
/var/log/nginx/error.log {
    daily
    rotate 7
    compress
    delaycompress
    notifempty
    create 0640 nginx nginx
    maxsize 100M
    sharedscripts
    postrotate
        nginx -s reopen || true
    endscript
}

# Docker container logs (if using json-file driver)
# Note: Docker handles this automatically with the logging options in docker-compose.yml
# This is here for reference if you need manual control
#/var/lib/docker/containers/*/*.log {
#    daily
#    rotate 3
#    compress
#    delaycompress
#    notifempty
#    maxsize 50M
#    copytruncate
#}