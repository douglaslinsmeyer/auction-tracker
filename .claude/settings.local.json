{
  "permissions": {
    "allow": [
      "WebFetch(domain:www.nellisauction.com)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "mcp__browsermcp__browser_screenshot",
      "mcp__browsermcp__browser_snapshot",
      "mcp__browsermcp__browser_get_console_logs",
      "mcp__browsermcp__browser_navigate",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "mcp__browsermcp__browser_click",
      "Bash(git push:*)",
      "mcp__browsermcp__browser_wait",
      "Bash(docker-compose up:*)",
      "Bash(npm install)",
      "Bash(curl:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose build:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(git rm:*)",
      "Bash(git config:*)",
      "mcp__browsermcp__browser_press_key",
      "Bash(docker exec:*)",
      "Bash(npm test:*)",
      "Bash(npm run start:*)",
      "Bash(npm install:*)",
      "Bash(sed:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(tree:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npm run test:*)",
      "Bash(ENCRYPTION_SECRET=test-secret-key-for-unit-tests npm test -- tests/unit/backwardCompatibility.test.js)",
      "Bash(ENCRYPTION_SECRET=test-secret AUTH_TOKEN=test-token npm test -- tests/integration/chromeExtensionCompatibility.test.js)",
      "Bash(ENCRYPTION_SECRET=test-secret AUTH_TOKEN=test-token npm test -- tests/integration/chromeExtensionCompatibility.test.js --silent)",
      "Bash(ENCRYPTION_SECRET=test-secret AUTH_TOKEN=test-token npm run test:unit)",
      "Bash(ENCRYPTION_SECRET=test-secret npm test -- tests/unit/featureFlags.test.js)",
      "Bash(rg:*)",
      "Bash(timeout 15s npm run test:bdd:*)",
      "Bash(npx cucumber-js:*)",
      "WebFetch(domain:cucumber.io)",
      "WebFetch(domain:github.com)",
      "Bash(git checkout:*)",
      "Bash(true)",
      "Bash(# Move feature files from discovered directory (excluding docs)\nfind tests/features/discovered -name \"*.feature\" -exec mv {} tests/bdd/features/ \\; 2>/dev/null || true\n\n# Move other feature files\nmv tests/features/auction-monitoring/start-monitoring.feature tests/bdd/features/auction-monitoring/ 2>/dev/null || true\nmv tests/features/bidding-strategies/auto-bidding.feature tests/bdd/features/bidding-strategies/ 2>/dev/null || true\nmv tests/features/performance/polling-queue.feature tests/bdd/features/performance/ 2>/dev/null || true)",
      "Bash(# Move step definitions from both locations\nmv tests/step-definitions/* tests/bdd/step-definitions/ 2>/dev/null || true\nmv tests/features/step_definitions/* tests/bdd/step-definitions/ 2>/dev/null || true)",
      "Bash(-e \"s|''../fixtures/|''../__fixtures__/|g\" )",
      "Bash(-e \"s|''../mocks/|''../__mocks__/|g\" )",
      "Bash(-e \"s|''../utils/|''../__support__/|g\" )",
      "Bash(-e \"s|''../support/|''../__support__/|g\" )",
      "Bash(-e \"s|''./fixtures/|''./__fixtures__/|g\" )",
      "Bash(-e \"s|''./mocks/|''./__mocks__/|g\" )",
      "Bash(-e \"s|''./utils/|''./__support__/|g\" )",
      "Bash(-e \"s|require(''../setup'')|require(''../__support__/setup'')|g\" )",
      "Bash({} ;)",
      "Bash(touch:*)",
      "Bash(cucumber-js:*)",
      "Bash(git merge:*)",
      "Bash(npx jest:*)",
      "Bash(chmod:*)",
      "Bash(cat:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run cancel:*)",
      "Bash(gh run watch:*)",
      "Bash(npm run build:*)",
      "Bash(./scripts/run-all-tests.sh:*)",
      "Bash(npm --version)",
      "Bash(docker:*)",
      "Bash(open /Users/douglaslinsmeyer/Projects/auction-tracker/test-dashboard-ws.html)",
      "Bash(./check-dashboard.sh:*)",
      "Bash(open:*)",
      "Bash(npx playwright install:*)",
      "Bash(./scripts/manage-extension.sh:*)",
      "mcp__memory__read_graph",
      "mcp__memory__create_entities",
      "mcp__memory__create_relations",
      "mcp__memory__search_nodes",
      "mcp__fetch__fetch",
      "Bash(kubectl config:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "Bash(kubectl apply:*)",
      "Bash(kubectl rollout status:*)",
      "mcp__sequentialsequencing__sequentialthinking",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npx eslint:*)",
      "Bash(awk:*)",
      "Bash(npm run:*)"
    ],
    "deny": []
  }
}